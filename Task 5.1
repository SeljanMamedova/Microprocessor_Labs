#include <avr/io.h>

#define LED1 PB0    // D8
#define LED2 PB1    // D9
#define LED3 PB2    // D10

int main(void)
{
    DDRB |= (1 << LED1) | (1 << LED2) | (1 << LED3);

    TCCR0A = 0x00;              // normal mode (WGM01=0,WGM00=0)
    TCCR0B = (1 << CS02);       
    TCNT0  = 0x00;              // start value
   
    // Prescaler = 1024
    TCCR1A = 0x00;
    TCCR1B = (1 << WGM12) | (1 << CS12) | (1 << CS10);
    OCR1A  = 15624;             // ~1 second at 16MHz/1024
    TCNT1  = 0x0000;
    
    // Prescaler = 1024
    TCCR2A = 0x00;
    TCCR2B = (1 << CS22) | (1 << CS21) | (1 << CS20);
    TCNT2  = 0x00;
    
    // medium blink after we toggle every few overflows if needed

    while (1)
    {
            if (TIFR0 & (1 << TOV0))        
        {
            PORTB ^= (1 << LED1);       // toggle LED1
            TIFR0  |= (1 << TOV0);      // clear overflow flag by writing 1
        }

        if (TIFR1 & (1 << OCF1A))       

        {
            PORTB ^= (1 << LED2);       // toggle LED2
            TIFR1  |= (1 << OCF1A);     // clear compare flag
        }

        
        if (TIFR2 & (1 << TOV2))        
        {
            PORTB ^= (1 << LED3);       // toggle LED3
            TIFR2  |= (1 << TOV2);      // clear overflow flag
        }
    }
}
